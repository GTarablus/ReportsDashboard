{"version":3,"sources":["services/httpService.js","services/reportService.js","components/Loading.jsx","components/Dashboard.jsx","store/actions/reportActions.js","App.jsx","reportWebVitals.js","store/reducers/reportReducer.js","store/index.js","store/store.js","index.js"],"names":["BASE_URL","axios","Axios","create","httpService","get","endpoint","data","ajax","post","put","delete","a","method","url","params","res","console","log","dir","response","status","window","location","assign","require","reportService","getCount","type","Loading","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","r","attributeName","repeatCount","dur","values","keyTimes","DashBoard","props","dispatch","useDispatch","reports","useSelector","state","reportModule","useEffect","interval","setInterval","count","toUpperCase","getCountOfReports","clearInterval","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","email","sms","meet","pay","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3759b7e.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/';\r\n\r\nvar axios = Axios.create({});\r\n\r\nexport const httpService = {\r\n  get(endpoint, data) {\r\n    return ajax(endpoint, 'GET', data);\r\n  },\r\n  post(endpoint, data) {\r\n    return ajax(endpoint, 'POST', data);\r\n  },\r\n  put(endpoint, data) {\r\n    return ajax(endpoint, 'PUT', data);\r\n  },\r\n  delete(endpoint, data) {\r\n    return ajax(endpoint, 'DELETE', data);\r\n  },\r\n};\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n  const url = `${BASE_URL}${endpoint}`;\r\n  // console.log('httpService', url);\r\n  try {\r\n    const res = await axios({\r\n      url,\r\n      method,\r\n      data,\r\n      params: method === 'GET' ? data : null,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\r\n      `Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`\r\n    );\r\n    console.dir(err);\r\n    if (err.response && err.response.status === 401) {\r\n      window.location.assign('/#/login');\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n","const { httpService } = require('./httpService');\r\n\r\nexport const reportService = {\r\n  getCount,\r\n};\r\n\r\nfunction getCount(type) {\r\n  return httpService.get(`${type}`);\r\n}\r\n","export function Loading() {\r\n  return (\r\n    <svg\r\n      //   style=\"margin: auto; background: rgb(241, 242, 243); display: block; shape-rendering: auto;\"\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n      <circle\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        fill=\"none\"\r\n        stroke=\"#93dbe9\"\r\n        stroke-width=\"10\"\r\n        r=\"35\"\r\n        stroke-dasharray=\"164.93361431346415 56.97787143782138\"\r\n      >\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          repeatCount=\"indefinite\"\r\n          dur=\"1s\"\r\n          values=\"0 50 50;360 50 50\"\r\n          keyTimes=\"0;1\"\r\n        ></animateTransform>\r\n      </circle>\r\n    </svg>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCountOfReports } from '../store/actions/reportActions';\r\nimport { Loading } from './Loading';\r\nexport const DashBoard = (props) => {\r\n  const { type } = props;\r\n  const dispatch = useDispatch();\r\n  const reports = useSelector((state) => state.reportModule);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dispatch(getCountOfReports(type));\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h4>Number of {type} reports</h4>\r\n      <h5>{reports[type] ? reports[type] : <Loading />}</h5>\r\n    </div>\r\n  );\r\n};\r\n","import { reportService } from '../../services/reportService';\r\n\r\nexport function getCountOfReports(type) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const count = await reportService.getCount(type);\r\n      type = type.toUpperCase();\r\n      dispatch({ type: `SET_${type}`, count });\r\n      // console.log('reportActions', count);\r\n    } catch (err) {}\r\n  };\r\n}\r\n","import './App.scss';\nimport { DashBoard } from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <main className=\"app-container\">\n          <h1>Reports Dashboard</h1>\n          <div className=\"main-dashboard\">\n            <DashBoard type={'email'} />\n            <DashBoard type={'sms'} />\n            <DashBoard type={'meet'} />\n            <DashBoard type={'pay'} />\n          </div>\n        </main>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  email: null,\r\n  sms: null,\r\n  meet: null,\r\n  pay: null,\r\n};\r\n\r\nexport function reportReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_EMAIL':\r\n      return { ...state, email: action.count };\r\n    case 'SET_SMS':\r\n      return { ...state, sms: action.count };\r\n    case 'SET_MEET':\r\n      return { ...state, meet: action.count };\r\n    case 'SET_PAY':\r\n      return { ...state, pay: action.count };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { reportReducer } from './reducers/reportReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  reportModule: reportReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './index';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/main.scss';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}